// DEMAND PLAN
type AddMonthlyDemandRequest = 
    record {
        name: text;
        description: text;
        customer_group: text;
        amount: float64;
        unit: Unit;
        from_month :nat8;
        year: nat16;
    };

// DEMAND PLAN
type AddYearlyDemandRequest = 
    record {
        name: text;
        description: text;
        customer_group: text;
        amount: float64;
        // unit: Unit;
        from_year :nat16;
    };

type UpdateYearlyDemandRequest = 
    record {
        id: nat32;
        name: text;
        description: text;
        customer_group: text;
        amount: float64;
        // unit: Unit;
        from_year :nat16;
    };

type Demand = 
    record {
        identity:text;
        id: nat32;
        name: text;
        description: text;
        customer_group: text;
        amount: float64;
        unit: Unit;
        created_date:text;
        from :Time;
        to : Time;
        period: Period;
    };


//RAW MATERIAL
type RawMaterial = 
    record {
        identity:text;
        id: nat32;
        name: text;
        amount: float64;
        urgency: text;
        requested_delivery_time:nat8;
        warehouse_name:text;
        // description: text;
        unit: Unit;
        date :text;
        created_date:text;

    };



//RAW MATERIAL PLANNING
type AddRawMaterialPlanningRequest = 
    record {
        name: text;
        amount: float64;
        urgency: text;
        requested_delivery_time:nat8;
        warehouse_name:text;
        date :text;
        // description: text;
    };
 
type UpdateRawMaterialPlanRequest = 
    record {
        id:nat32;
        name: text;
        amount: float64;
        requested_delivery_time:nat8;
        urgency: text;
        warehouse_name:text;
        date :text;
        // description: text;
    };
 
//START --- SOURCING AND PROCUREMENT

//RAW MATERIAL OFFERS
type AddRawMaterialOfferRequest = 
    record {
        name: text;
        amount: float64;
        unit_price: float64;
        company_name:text;
        warehouse_name:text;
        requested_date:text;
        delivery_date :text;
        // total_price: float64;
        // delivery_time:nat8;
        // unit: Unit;
    };
type UpdateRawMaterialOfferRequest = 
    record {
        id:nat32;
        name: text;
        amount: float64;
        unit_price: float64;
        company_name:text;
        warehouse_name:text;
        requested_date:text;
        delivery_date :text;
    };
type RawMaterialOffer = 
    record {
        identity:text;
        id: nat32;
        name: text;
        amount: float64;
        unit_price: float64;
        total_price: float64;
        company_name:text;
        warehouse_name:text;
        unit: Unit;
        requested_date:text;
        delivery_date :text;
        created_date:text;
        // delivery_time:nat8;
    };

//RAW MATERIAL AGREEMENTS
type AddRawMaterialAgreementRequest = 
    record {
        product_name: text;
        amount: float64;
        unit_price: float64;
        total_price: float64;
        company_name:text;
        agreement_date:Time;
        delivery_date:Time;
        delivery_time : nat8;
        warehouse_name:text;
        unit: Unit;
    };
type RawMaterialAgreement = 
    record {
        identity:text;
        id: nat32;
        product_name: text;
        amount: float64;
        unit_price: float64;
        total_price: float64;
        company_name:text;
        agreement_date:Time;
        delivery_date:Time;
        delivery_time : nat8;
        warehouse_name:text;
        unit: Unit;
        created_date:text;
    };

//END --- SOURCING AND PROCUREMENT


//START --- PROCUREMENT WAREHOUSE

type AddRawMaterialWarehouseRequest = 
    record {
        name: text;
        district: text;
        province: text;
        country: text;
        location_detail: text;
    };
type RawMaterialWarehouse = 
    record {
        identity:text;
        id: nat32;
        name: text;
        district: text;
        province: text;
        country: text;
        location_detail: text;
        created_date:text;
    };

//END --- PROCUREMENT WAREHOUSE


//START --- MANUFACTURING
type CreateProductRequest = 
    record {
        // name: text;
        // price: nat64;
        barcode:text;
        // quantity:nat64;
        // unit: Unit;
    };

type Product = 
    record {
        identity:text;
        id: nat32;
        name: text;
        // price: nat64;
        // unit: Unit;
        status: ProductStatus;
        created_date:text;
        barcode:text;
        quantity:nat64;
    };

type CreateMainProductRequest = 
    record {
        name: text;
        barcode:text;
        unit: Unit;
        price: nat64;
        quantity_per_product:nat32;

    };

type MainProduct = 
    record {
        identity:text;
        id: nat32;
        name: text;
        barcode:text;
        total_amount: nat64;
        unit: Unit;
        price: nat64;
        quantity_per_product:nat32;
        created_date:text;
    };
//END --- MANUFACTURING

//START --- ORDERS
type Order = 
    record {
        id: nat32;
        identity:text;
        barcode:text;
        product_name: text;
        customer_title:text;
        address:text;
        quantity:float32;
        unit_price:float32;
        total_price:float32;
        order_date:text;
        order_status:OrderStatus;
        delivery_date:text;
        created_date:text;
        
    };
type CreateOrderRequest = 
    record {
        barcode:text;
        customer_title:text;
        address:text;
        quantity:float32;
        unit_price:float32;
        total_price:float32;
        order_date:text;
    };

 
 type OrderDetail = 
    record {
        id: nat32;
        identity:text;
        order_id: nat32;
        product_id: nat32;
        product_name:text;
        quantity:float32;
        price:float32;
        created_date:text;
    };

//END --- ORDERS

type Time = record{
    year:nat16;
    month:nat8;
    day:nat8;
    formatted:text;

};

type Unit = variant {
    Kg;
    Tonne;
    Piece;
};

type Period = variant {
    Year;
    Month;
    Week;
};
type Urgency = variant {
    Lowest;
    Low;
    Medium;
    High;
    Critical;
};

type ProductStatus = variant {
    PendingApproval;
    Approved;
    Rejected;
    Ordered;
    Sold;
};

type OrderStatus = variant {
    Received;
    Processing;
    Shipped;
    Delivered;
    Completed;
    Rejected;
    Cancelled;
};


service : {
    //START --- PLANNING
        //DEMAND PLANNING
        "add_monthly_demand_plan": (AddMonthlyDemandRequest) -> (opt bool);
        "add_yearly_demand_plan": (AddYearlyDemandRequest) -> (bool);
        "get_all_demand_plans": () -> (vec Demand) query;
        "get_demand_plan_by_id" : (nat32) -> (Demand) query;
        "delete_demand_plan_by_id" :(nat32) -> (bool);
        "update_yearly_demand_plan": (UpdateYearlyDemandRequest) -> (bool);

        //RAW MATERIAL PLANNING
        "add_raw_material_plan": (AddRawMaterialPlanningRequest) -> (bool);
        "get_all_raw_material_plans": () -> (vec RawMaterial) query;
        "get_raw_material_plan_by_id" : (nat32) -> (RawMaterial) query;
        "delete_raw_material_plan_by_id" :(nat32) -> (bool);
        "update_raw_material_plan": (UpdateRawMaterialPlanRequest) -> (bool);
    //END --- PLANNING


    //START --- SOURCING AND PROCUREMENT
        //RAW MATERIAL OFFERS
        "add_raw_material_offer": (AddRawMaterialOfferRequest) -> (opt bool);
        "get_all_raw_material_offers": () -> (vec RawMaterialOffer) query;
        "get_raw_material_offer_by_id" : (nat32) -> (RawMaterialOffer) query;
        "delete_raw_material_offer_by_id" :(nat32) -> (bool);
        "update_raw_material_offer": (UpdateRawMaterialOfferRequest) -> (bool);


        //RAW MATERIAL AGREEMENTS
        "add_raw_material_agreement": (AddRawMaterialAgreementRequest) -> (opt bool);
        "get_all_raw_material_agreements": () -> (vec RawMaterialAgreement) query;

    //END --- SOURCING AND PROCUREMENT


    //START --- PROCUREMENT WAREHOUSE
        //RAW MATERIAL WAREHOUSE
        "add_raw_material_warehouse": (AddRawMaterialWarehouseRequest) -> (opt bool);
        "get_all_raw_material_warehouses": () -> (vec RawMaterialWarehouse) query;


    //END --- PROCUREMENT WAREHOUSE
        "create_product": (CreateProductRequest) -> (opt bool);
        "create_bulk_product": (CreateProductRequest,quantity:nat32) -> (opt bool);
        "get_all_created_products": () -> (vec Product) query;

        "approve_product": (nat32,ProductStatus) -> (opt bool);

        "create_main_product": (CreateMainProductRequest) -> (opt bool);
        "get_all_main_products": () -> (vec MainProduct) query;
        "get_main_product_by_barcode" : (barcode:text) -> (MainProduct) query;

        "assign_products_for_order":(nat32,text) -> (opt vec Product);
    
    //START --- ORDERS
        "create_order":(CreateOrderRequest) -> (opt bool);
        "get_order_by_id" :(nat32) -> (Order);
        "get_all_orders" : () -> (vec Order);
        "get_order_details_by_order_id": (nat32) -> (vec OrderDetail);
        "update_order" : (nat32,OrderStatus) -> (bool)
    //END --- ORDERS
}
